A continuación se encuentra la actividad que deberá realizar en esta semana, la cual dará cuenta de su aprendizaje hasta el momento; tenga presente que la calificación que obtendrá se sumará a su evaluación final. Cartilla digital. ¿Cómo construir un software seguro? Descripción: El estudiante elaborará de forma individual una cartilla digital sobre las características y aspectos clave para el desarrollo seguro de software en cada una de sus fases, durante la actividad establecerá las pautas para su aplicación en un caso práctico, con el objetivo de definir políticas de seguridad en el desarrollo de software por medio de técnicas seguras de construcción. Lo anterior le permitirá aplicar estándares seguros de desarrollo de software y ejecutar análisis tanto estáticos como dinámicos. Ver: Tenga en cuenta las siguientes preguntas orientadoras para desarrollar la actividad: ¿Por qué es importante automatizar el proceso de construcción o codificación del software y asegurar las herramientas usadas? ¿Qué impacto tiene el definir comprobaciones de seguridad obligatorias en el proceso de compilación y asegurarse de que falla en la creación de artefactos que no cumplen? Juzgar: Consulte los siguientes recursos y con base en una lectura minuciosa, realice lo que se indica a continuación. Ortega, J. (2018). Programación segura en aplicaciones de comercio electrónico. En: Seguridad en aplicaciones Web Java (pp. 62-94) [versión electrónica]. RA-MA Editorial. SAMM. (s. f). SAMM model overview. SAMM. Tome apuntes o subraye las ideas principales de los documentos consultados, con el fin de sintetizar la información de forma precisa. Puede realizar una investigación adicional en fuentes de información verídicas y confiables para complementar la información. Actuar: A partir de los recursos básicos y complementarios, así como de la consulta de la infografía, elabore una cartilla en la que evidencie la aplicación de estándares seguros de desarrollo de software y la ejecución de análisis estáticos y dinámicos en un proyecto, así como las recomendaciones en el desarrollo seguro, centrados en el proceso de compilación y las dependencias del software. Tenga en cuenta los siguientes aspectos: Seleccione la herramienta web de su preferencia. Puede apoyarse de alguna de las siguientes para su elaboración: Dé clic en cada botón para conocer su contenido. CanvaLinks to an external site. FlipsnackLinks to an external site. VistaCreateLinks to an external site. Su cartilla debe tener la siguiente estructura: Portada. Haga uso de una imagen o elabore una ilustración que se relacione con la temática. Título. Proponga un título corto y llamativo que tenga relación con el tema. Página legal o contraportada. Vincule el nombre del autor de la cartilla y la fecha. Tabla de contenido. Indique los temas, capítulos, subtemas, entre otros, que muestran la estructura y de modo general el contenido de la cartilla. Introducción. Elabore un texto en el que responda las siguientes preguntas: ¿Cuál es el propósito de la cartilla?, ¿a quién va dirigida?, ¿cuál es el contenido que va a desarrollar?, ¿cuál es su importancia? Contenido. Recomendaciones en el desarrollo seguro centrado en el proceso de compilación y las dependencias del software. Aborde aspectos como: la definición formal del proceso de compilación, la automatización del proceso de construcción y aseguramiento de las herramientas usadas, las comprobaciones de seguridad obligatorias en el proceso de compilación y la evaluación de las dependencias utilizadas. Conclusiones. Formule conclusiones en las que retome de manera sintética los elementos clave abordados en la cartilla; además, presente un enunciado que evidencie su planteamiento personal con respecto a estos. Incluya elementos visuales (imágenes, gráficos, entre otros) de buena calidad que complementen la información y favorezcan su comprensión. Referencias bibliográficas. Referencie en formato APA los recursos (bibliografía, imágenes, gráficos, entre otros) usados en la cartilla. Presente información relevante y completa, de manera clara y organizada. Cuide la presentación, redacción y ortografía. En un documento en Word integre una portada con el título del trabajo, su nombre completo, el nombre del curso y el número de la semana, el nombre del docente y la fecha de entrega, en la segunda página incluya el enlace de su cartilla digital para que su docente lo puede revisar y evaluar. Devolución creativa-metacognición: Entre los aprendizajes que el estudiante debe adquirir para un desarrollo seguro están los requerimientos de seguridad de los cuales deriva una lista de verificación del código. Esta puede consistir en comprobaciones específicas ante las inquietudes de seguridad, alrededor de los requerimientos funcionales o comprobación de las buenas prácticas de codificación basadas en la implementación del lenguaje, la plataforma, el tipo de tecnología, etcétera. Dado que las vulnerabilidades a nivel de código pueden tener un impacto importante si ocurren en partes críticas del software, es recomendable revisar los módulos de riesgo alto por ejemplo, los módulos de autenticación, los esquemas de manejo de sesión, las interfaces externas, los validadores de entradas y los analizadores de datos, entre otras. Además, conocer el proceso de seguridad como un sistema integral ayudará al estudiante a reconocer las debilidades del mismo y a prevenir posibles fallas, así como las implicaciones de las mismas sobre el sistema total, es por eso que es de vital importancia adquirir el conocimiento de este tema. Tiempos y recursos educativos para el desarrollo de la actividad Tipo de actividad Individual Tiempos Desarrollo de la actividad: 9 horas Consulta de materiales: 8 horas Recursos Recursos básicos: Ortega, J. (2018). Programación segura en aplicaciones de comercio electrónico En: Seguridad en aplicaciones Web Java(pp. 62-94). RA-MA Editorial. SAMM. (s. f). SAMM model overview.Links to an external site. SAMM. Recurso complementario: Conklin, L. (s. f.). Threat modeling process.Links to an external site. OWASP. mi nombre es Jorge Andres Padilla Mayo la materia es seguridad en el desarrollo de software el profesor se llama JUAN CARLOS VALENCIA la universidad es Uniminuto.